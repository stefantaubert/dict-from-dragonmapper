[project]
name = "dict-from-dragonmapper"
version = "0.0.1"
description = "Command-line interface (CLI) to create a pronunciation dictionary by looking up IPA transcriptions using dragonmapper and the possibility of ignoring punctuation and splitting on hyphens before transcription."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
  {email = "pypi@stefantaubert.com"},
  {name = "Stefan Taubert"}
]
maintainers = [
  {email = "pypi@stefantaubert.com"},
  {name = "Stefan Taubert"}
]
keywords = [
  "Pronunciation",
  "Dictionary",
  "Chinese",
  "IPA",
  "Language",
  "Linguistics"
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Operating System :: OS Independent",
  "Operating System :: MacOS",
  "Operating System :: POSIX",
  "Operating System :: POSIX :: BSD",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
]
dependencies = [
  "pronunciation-dictionary >= 0.0.4",
  "ordered-set >= 4.1.0",
  "word-to-pronunciation >= 0.0.1",
  "dragonmapper >=0.2.6, < 0.3",
  "tqdm"
]

[project.urls]
Homepage = "https://github.com/stefantaubert/dict-from-dragonmapper"
Issues = "https://github.com/stefantaubert/dict-from-dragonmapper/issues"

[project.scripts]
dict-from-dragonmapper-cli = "dict_from_dragonmapper.cli:run_prod"

[tool.setuptools.packages.find]
where = ["src"]
include = [
  "dict_from_dragonmapper",
]
exclude = [
  "dict_from_dragonmapper_tests",
  "dict_from_dragonmapper_debug"
]
namespaces = true

[tool.pytest.ini_options]
log_cli = true
log_level = "DEBUG"
testpaths = [
  "src/dict_from_dragonmapper_tests",
]

[tool.autopep8]
indent-size = 2
ignore = ["E121"]
max_line_length = 100

[tool.isort]
line_length = 100
indent = 2
known_first_party = [
  "dict_from_dragonmapper",
]
known_third_party = [
  "pronunciation_dictionary",
  "ordered_set",
  "word_to_pronunciation",
  "dragonmapper"
]

[tool.pyright]
root = ["src"]
include = ["src"]
pythonPlatform = "All"
typeCheckingMode = "off"
stubPath = ""
exclude = [
  "**/node_modules",
  "**/__pycache__",
  ".git",
  "**/*.egg-info",
  "**/*_debug",
]
useLibraryCodeForTypes = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310}
isolated_build = true

[testenv]
deps = 
  pytest
commands = 
  pytest
  dict-from-dragonmapper-cli
  dict-from-dragonmapper-cli -v
"""

[build-system]
requires = [
  "setuptools >= 40.9.0",
  "wheel",
]
build-backend = "setuptools.build_meta"
